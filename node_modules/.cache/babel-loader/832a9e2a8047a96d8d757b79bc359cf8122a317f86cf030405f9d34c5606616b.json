{"ast":null,"code":"var _jsxFileName = \"/home/thomasbressel/cv-perso (React Js)/src/components/error/Canvas.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Canvas = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"moncanvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n  {\n    // Ciblage de l'écran dans le canvas\n    let ecran = document.getElementById(\"canvas\").getContext(\"2d\");\n    let imageArrierePlan = new Image();\n    imageArrierePlan.src = \"./assets/img/background.jpg\";\n\n    // création d'une classe \"modèle\" pour un personnage\n    class Perso {\n      // il me faut le chemin de l'image, coordonnées X,Y et en bonus la hauteur et largeur du sprite, 20px par défaut au pire\n      constructor(p_source, p_posx, p_posy) {\n        let p_height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 20;\n        let p_width = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 20;\n        this.perso = new Image();\n        this.posx = p_posx;\n        this.posy = p_posy;\n        this.height = p_height;\n        this.width = p_width;\n\n        // onload attention que la méthode dessiner renvoie l'image chargé\n        this.perso.onload = () => {\n          // Une fois l'image chargée, dessiner le perso\n          this.dessiner();\n        };\n        this.perso.src = p_source;\n      }\n\n      // Méthode à appeler pour dessiner le perso sur le canvas\n      dessiner() {\n        ecran.drawImage(this.perso, this.posx, this.posy, this.height, this.width);\n      }\n\n      // Méthode à appeler pour mettre à jour l'image du perso\n      changerImage(p_source) {\n        // le chemin de l'image comme toujours\n        this.perso.src = p_source;\n        // et encore une fois d'attendre que l'image soit chargé par le retour de la méthode dessiner \n        this.perso.onload = () => {\n          this.dessiner();\n        };\n      }\n    }\n    let ELEMENT__cibleX = document.getElementById(\"coordX\");\n    console.log(ELEMENT__cibleX);\n    let ELEMENT__cibleY = document.getElementById(\"coordY\");\n    console.log(ELEMENT__cibleY);\n    ecran.drawImage(imageArrierePlan, 0, 0);\n    let Tom = new Perso(\"./assets/img/creative.png\", 10, 10);\n    let directionH = \"gauche\";\n    let directionV = \"bas\";\n\n    // fonction  qui définit les conditions du mouvement gauche\n    // La fonction gauche continu de retourner gauche tant qu'on dépasse pas la valeur superieur\n    // si on dépasse on définir la direction à droite et on met à jour l'image \n    function gauche() {\n      Tom.posx++;\n      ELEMENT__cibleX.innerHTML = Tom.posx;\n      if (Tom.posx >= 280) {\n        directionH = \"droite\";\n        Tom.changerImage(\"./assets/img/creative-g.png\");\n        let baliseaudio = document.getElementById(\"sound\");\n        baliseaudio.play();\n      }\n      return directionH;\n    }\n    // fonction  qui définit les conditions du mouvement droite\n    // La fonction droite continu de retourner droite tant qu'on dépasse pas la valeur superieur\n    // si on dépasse on définir la direction à gauche et on met à jour l'image \n    function droite() {\n      Tom.posx--;\n      ELEMENT__cibleX.innerHTML = Tom.posx;\n      if (Tom.posx <= 0) {\n        directionH = \"gauche\";\n        Tom.changerImage(\"./assets/img/creative.png\");\n        let baliseaudio = document.getElementById(\"sound\");\n        baliseaudio.play();\n      }\n      return directionH;\n    }\n    function bas() {\n      Tom.posy++;\n      ELEMENT__cibleY.innerHTML = Tom.poxy;\n      if (Tom.posy >= 130) {\n        directionV = \"haut\";\n        let baliseaudio = document.getElementById(\"sound\");\n        baliseaudio.play();\n      }\n      return directionV;\n    }\n    function haut() {\n      Tom.posy--;\n      ELEMENT__cibleY.innerHTML = Tom.poxy;\n      if (Tom.posy <= 0) {\n        directionV = \"bas\";\n        let baliseaudio = document.getElementById(\"sound\");\n        baliseaudio.play();\n      }\n      return directionH;\n    }\n\n    // vitesse de la boucle\n    setInterval(boucle, 1000 / 80);\n\n    // --------------------------------------------------------------------------------------\n    // --------------------------------------------------------------------------------------\n    // ------------------------------    BOUCLE PRINCIPALE    -------------------------------\n    // --------------------------------------------------------------------------------------\n    // --------------------------------------------------------------------------------------\n    function boucle() {\n      // console.log(directionH)\n      // console.log(directionV)\n\n      if (directionH === \"gauche\") {\n        gauche();\n      } else {\n        droite();\n      }\n      if (directionV === \"bas\") {\n        bas();\n      } else {\n        haut();\n      }\n\n      // Effacer le canvas \n      ecran.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Dessiner le perso avec les nouvelles coordonnées\n      Tom.dessiner();\n    }\n  }\n};\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Canvas","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","ecran","document","getElementById","getContext","imageArrierePlan","Image","src","Perso","constructor","p_source","p_posx","p_posy","p_height","arguments","length","undefined","p_width","perso","posx","posy","height","width","onload","dessiner","drawImage","changerImage","ELEMENT__cibleX","console","log","ELEMENT__cibleY","Tom","directionH","directionV","gauche","innerHTML","baliseaudio","play","droite","bas","poxy","haut","setInterval","boucle","clearRect","canvas","_c","$RefreshReg$"],"sources":["/home/thomasbressel/cv-perso (React Js)/src/components/error/Canvas.js"],"sourcesContent":["import React from \"react\";\n\n\nconst Canvas = () => {\n    return(\n        <div className=\"canvas-container\">\n            <canvas id=\"moncanvas\"></canvas>\n\n\n        </div>\n\n\n    );\n\n{\n    // Ciblage de l'écran dans le canvas\nlet ecran = document.getElementById(\"canvas\").getContext(\"2d\");\n\n\nlet imageArrierePlan = new Image();\nimageArrierePlan.src = \"./assets/img/background.jpg\";\n\n\n\n\n// création d'une classe \"modèle\" pour un personnage\nclass Perso {\n    // il me faut le chemin de l'image, coordonnées X,Y et en bonus la hauteur et largeur du sprite, 20px par défaut au pire\n    constructor(p_source, p_posx, p_posy, p_height = 20, p_width = 20) {\n        this.perso = new Image();\n        this.posx = p_posx;\n        this.posy = p_posy;\n        this.height = p_height;\n        this.width = p_width;\n\n        // onload attention que la méthode dessiner renvoie l'image chargé\n        this.perso.onload = () => {\n            // Une fois l'image chargée, dessiner le perso\n            this.dessiner();\n        };\n        this.perso.src = p_source;\n    }\n\n    // Méthode à appeler pour dessiner le perso sur le canvas\n    dessiner() {\n        ecran.drawImage(this.perso, this.posx, this.posy, this.height, this.width);\n    }\n\n    // Méthode à appeler pour mettre à jour l'image du perso\n    changerImage(p_source) {\n        // le chemin de l'image comme toujours\n        this.perso.src = p_source;\n        // et encore une fois d'attendre que l'image soit chargé par le retour de la méthode dessiner \n        this.perso.onload = () => {\n            this.dessiner();\n        }\n    }\n}\n\n\nlet ELEMENT__cibleX = document.getElementById(\"coordX\");\nconsole.log(ELEMENT__cibleX);\n\nlet ELEMENT__cibleY = document.getElementById(\"coordY\");\nconsole.log(ELEMENT__cibleY);\n\necran.drawImage(imageArrierePlan, 0, 0);\nlet Tom = new Perso(\"./assets/img/creative.png\", 10, 10);\nlet directionH = \"gauche\";\nlet directionV = \"bas\"\n\n// fonction  qui définit les conditions du mouvement gauche\n// La fonction gauche continu de retourner gauche tant qu'on dépasse pas la valeur superieur\n// si on dépasse on définir la direction à droite et on met à jour l'image \nfunction gauche() {\n    Tom.posx++;\n    ELEMENT__cibleX.innerHTML = Tom.posx;\n    if(Tom.posx >= 280) {\n        directionH = \"droite\"\n        Tom.changerImage(\"./assets/img/creative-g.png\")\n\n        let baliseaudio = document.getElementById(\"sound\");\n    \n        baliseaudio.play();\n    }\n    return directionH\n}\n// fonction  qui définit les conditions du mouvement droite\n// La fonction droite continu de retourner droite tant qu'on dépasse pas la valeur superieur\n// si on dépasse on définir la direction à gauche et on met à jour l'image \nfunction droite() {\n    Tom.posx--;\n    ELEMENT__cibleX.innerHTML = Tom.posx;\n    if(Tom.posx <= 0) {\n        directionH = \"gauche\"\n \n        Tom.changerImage(\"./assets/img/creative.png\")\n        let baliseaudio = document.getElementById(\"sound\");\n       \n        baliseaudio.play();\n    }\n    return directionH\n}\n\n\nfunction bas() {\n    Tom.posy++;\n    ELEMENT__cibleY.innerHTML = Tom.poxy;\n    if(Tom.posy >= 130) {\n        directionV = \"haut\"\n        let baliseaudio = document.getElementById(\"sound\");\n     \n        baliseaudio.play();\n    }\n    return directionV\n}\n\nfunction haut() {\n    Tom.posy--;\n    ELEMENT__cibleY.innerHTML = Tom.poxy;\n \n    if(Tom.posy <= 0) {\n  \n        directionV = \"bas\"\n        let baliseaudio = document.getElementById(\"sound\");\n        \n        baliseaudio.play();\n      \n    }\n    return directionH\n}\n\n\n\n// vitesse de la boucle\nsetInterval(boucle, 1000 / 80);\n\n\n\n// --------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------\n// ------------------------------    BOUCLE PRINCIPALE    -------------------------------\n// --------------------------------------------------------------------------------------\n// --------------------------------------------------------------------------------------\nfunction boucle(){\n\n\n    \n    \n\n    \n    // console.log(directionH)\n    // console.log(directionV)\n\n     if(directionH === \"gauche\") {\n         gauche()\n     } else {\n         droite()\n     }\n    if(directionV === \"bas\") {\n        bas()\n    } else {\n        haut()\n    }\n\n    // Effacer le canvas \n    ecran.clearRect(0, 0, canvas.width, canvas.height);\n\n\n    // Dessiner le perso avec les nouvelles coordonnées\n    Tom.dessiner();\n\n}\n\n\n}\n\n};\n\nexport default Canvas;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}